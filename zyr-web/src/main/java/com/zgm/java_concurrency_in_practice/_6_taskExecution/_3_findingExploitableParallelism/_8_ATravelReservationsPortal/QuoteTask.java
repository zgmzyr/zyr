/*
 * Copyright 2013 The JA-SIG Collaborative. All rights reserved.
 * distributed with this file and available online 
 */
package com.zgm.java_concurrency_in_practice._6_taskExecution._3_findingExploitableParallelism._8_ATravelReservationsPortal;

import java.util.concurrent.Callable;
import java.util.concurrent.CancellationException;

/**
 * 
 * @author 周光明 Exp
 * @version $FileName: QuoteTask.java $Date: May 20, 2013 10:49:11 AM -0400 2013
 * @since 1.0
 * 
 */

class QuoteTask implements Callable<TravelQuote> {
	private final TravelCompany company;
	private final TravelInfo travelInfo;
	
    public QuoteTask(TravelCompany company, TravelInfo travelInfo) {
		super();
		this.company = company;
		this.travelInfo = travelInfo;
	}

    
//    ...
    
    public TravelQuote call() throws Exception {
        return company.solicitQuote(travelInfo);
    }


	public TravelQuote getFailureQuote(Throwable cause) {
		//TODO
		return null;
	}


	public TravelQuote getTimeoutQuote(CancellationException e) {
		//TODO
		return null;
	}
}


